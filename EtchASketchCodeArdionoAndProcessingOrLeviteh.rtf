{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 /////////////////////////////////////////////////////////////////////Arduino code//////////////////////////////////////////////////////////////////////\
\
/*Project by Or Leviteh, November 1st, 2012.\
Thank yous to Adiel Fernandez, Daniel Albuquerque and Jeannette Subero!\
\
  Serial Call and Response\
 Language: Wiring/Arduino\
 \
 This program sends an ASCII A (byte of value 65) on startup\
 and repeats that until it gets some data in.\
 Then it waits for a byte in the serial port, and \
 sends three sensor values whenever it gets a byte in.\
 \
 Thanks to Greg Shakar and Scott Fitzgerald for the improvements\
 \
   The circuit:\
 * potentiometers attached to analog inputs 0 and 1 \
 * pushbutton attached to digital I/O 2\
 \
 Created 26 Sept. 2005\
 by Tom Igoe\
 modified 24 April 2012\
 by Tom Igoe and Scott Fitzgerald\
\
 This example code is in the public domain.\
\
 http://www.arduino.cc/en/Tutorial/SerialCallResponse\
\
 */\
\
int firstSensor = 0;    // first analog sensor\
int secondSensor = 0;   // second analog sensor\
int thirdSensor = 0;    // digital sensor\
int inByte = 0;         // incoming serial byte\
\
void setup()\
\{\
  // start serial port at 9600 bps:\
  Serial.begin(9600);\
  while (!Serial) \{\
    ; // wait for serial port to connect. Needed for Leonardo only\
  \}\
\
  pinMode(2, INPUT);   // digital sensor is on digital pin 2\
  establishContact();  // send a byte to establish contact until receiver responds \
\}\
\
void loop()\
\{\
  // if we get a valid byte, read analog ins:\
  if (Serial.available() > 0) \{\
    // get incoming byte:\
    inByte = Serial.read();\
    // read first analog input, divide by 4 to make the range 0-255:\
    firstSensor = analogRead(A0)/4;\
    // delay 10ms to let the ADC recover:\
    delay(10);\
    // read second analog input, divide by 4 to make the range 0-255:\
    secondSensor = analogRead(1)/4;\
    // read  switch, map it to 0 or 255L\
//    thirdSensor = map(digitalRead(2), 0, 1, 0, 255);  \
    thirdSensor = analogRead(2)/4;\
    // send sensor values:\
    Serial.write(firstSensor);\
    Serial.write(secondSensor);\
    Serial.write(thirdSensor);               \
  \}\
\}\
\
void establishContact() \{\
  while (Serial.available() <= 0) \{\
    Serial.print('A');   // send a capital A\
    delay(300);\
  \}\
\}\
\
\
/////////////////////////////////////////////////////////////////Processing Code////////////////////////////////////////////////////////////////////\
\
/*Project by Or Leviteh, November 1st, 2012.\
Thank yous to Adiel Fernandez, Daniel Albuquerque and Jeannette Subero!\
\
  Serial Call and Response\
 Language: Wiring/Arduino\
 \
 This program sends an ASCII A (byte of value 65) on startup\
 and repeats that until it gets some data in.\
 Then it waits for a byte in the serial port, and \
 sends three sensor values whenever it gets a byte in.\
 \
 Thanks to Greg Shakar and Scott Fitzgerald for the improvements\
 \
   The circuit:\
 * potentiometers attached to analog inputs 0 and 1 \
 * pushbutton attached to digital I/O 2\
 \
 Created 26 Sept. 2005\
 by Tom Igoe\
 modified 24 April 2012\
 by Tom Igoe and Scott Fitzgerald\
\
 This example code is in the public domain.\
\
 http://www.arduino.cc/en/Tutorial/SerialCallResponse\
\
 */\
\
//Processing sketch to run with this example:\
\
// This example code is in the public domain.\
\
import processing.serial.*;\
PImage img;\
\
int bgcolor;           // Background color\
int button;           // Fill color\
Serial myPort;                       // The serial port\
int[] serialInArray = new int[3];    // Where we'll put what we receive\
int serialCount = 0;                 // A count of how many bytes we receive\
float xpos, ypos;                 // Starting position of the ball\
boolean firstContact = false;        // Whether we've heard from the microcontroller\
\
void setup() \{\
  size(800, 654);  // Stage size\
  smooth();\
  noStroke();      // No border on the next thing drawn\
  background(220);\
  //frameRate(500);\
\
  img = loadImage("etch.png");\
\
  // Set the starting position of the ball (middle of the stage)\
  xpos = 684;\
  ypos = 517;\
\
  // Print a list of the serial ports, for debugging purposes:\
  println(Serial.list());\
\
  // I know that the first port in the serial list on my mac\
  // is always my  FTDI adaptor, so I open Serial.list()[0].\
  // On Windows machines, this generally opens COM1.\
  // Open whatever port is the one you're using.\
  String portName = Serial.list()[6];\
  myPort = new Serial(this, portName, 9600);\
\}\
\
void draw() \{\
  //  background(bgcolor);\
  fill(0);\
  // Draw the shape\
  ellipse(xpos, ypos, 3, 3);\
 \
  \
\
  \
\
  if (button <= 50) \{\
    fill(220,220,220,15);\
   rect(0,0,width,height);\
   // img = loadImage("etch.png");\
  \}\
   if (button >= 100) \{\
    fill(220,220,220,15);\
    rect(0,0,width,height);\
   // img = loadImage("etch.png");\
  \}\
image(img, 0, 0);\
\
\}\
\
void serialEvent(Serial myPort) \{\
  // read a byte from the serial port:\
  int inByte = myPort.read();\
  // if this is the first byte received, and it's an A,\
  // clear the serial buffer and note that you've\
  // had first contact from the microcontroller. \
  // Otherwise, add the incoming byte to the array:\
  if (firstContact == false) \{\
    if (inByte == 'A') \{ \
      myPort.clear();          // clear the serial port buffer\
      firstContact = true;     // you've had first contact from the microcontroller\
      myPort.write('A');       // ask for more\
    \}\
  \} \
  else \{\
    // Add the latest byte from the serial port to array:\
    serialInArray[serialCount] = inByte;\
    serialCount++;\
\
    // If we have 3 bytes:\
    if (serialCount > 2 ) \{\
      xpos = serialInArray[0];\
      xpos = map (xpos, 0, 255, 112, 684); \
      ypos = serialInArray[1];\
      ypos = map (ypos, 0, 255, 111, 517); \
      button = serialInArray[2];\
\
      // print the values (for debugging purposes only):\
      println(xpos + "\\t" + ypos + "\\t" + button);\
      // + mouseX + "\\t" + mouseY\
      // Send a capital A to request new sensor readings:\
      myPort.write('A');\
      // Reset serialCount:\
      serialCount = 0;\
    \}\
  \}\
\}\
}